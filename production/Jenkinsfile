pipeline {
    environment{
        dockerImage = ''
    }

    agent none

    stages {
        stage ('Build app boxfuse') {
            agent {
                docker { 
                    image 'khvatea/java-builder:0.0.2'
                    // Set node builder for assembly
                    label 'docker'
                    args '-v /var/run/docker.sock:/var/run/docker.sock'
                    // Run the container on the node specified at the top-level of the Pipeline, in the same workspace, rather than on a new node entirely.
                    // Otherwise, dind will start not on the 'builder' node
                    reuseNode true
                }                
             }
            stages {
                stage ('Cloning Git boxfuse project') {
                    steps {
                        git 'https://github.com/khvat-ea/boxfuse-origin-1.git'
                    }
                }
                stage ('Build boxfuse project') {
                    steps {
                        sh 'ls -la $pwd'
                        sh 'mvn package'
                    }
                }
                stage ('Cloning Git deploy files') {
                    steps {
                        dir ('prod'){
                            git branch: 'main', url: 'https://github.com/khvat-ea/les_11.git'
                        } 
                    }
                }
                stage ('Building image'){
                    steps{
                        sh 'docker build --build-arg path_to_war="./target/hello-1.0.war" --file "./prod/production/Dockerfile" --tag khvatea/web_app_boxfuse:2.0.0 .'
                        script {
                            dockerImage = docker.image ("khvatea/web_app_boxfuse:2.0.0")
                        }
                    }
                }
                stage ('Push image to DockerHub') {
                    steps {
                        script{
                            docker.withRegistry( 'https://index.docker.io/v1/', 'ef60b993-2c78-4b61-8454-7ae438597e64' ) {
                                dockerImage.push()
                            }
                        }
                    }
                }
            }
        }

        stage ('Deploy image to production') {
            agent { label 'prod' }
            stages{
                stage ('Get docker image from DockerHub') {
                    steps {
                        script{
                            docker.withRegistry( 'https://index.docker.io/v1/', 'ef60b993-2c78-4b61-8454-7ae438597e64' ) {
                                dockerImage = docker.image ('khvatea/web_app_boxfuse:2.0.0')
                                dockerImage.pull()
                            }
                        }
                    }
                }
                stage ('Start Web-application boxfuse'){
                    steps{
                        sh 'docker run -d -p 8090:8080 --name boxfuse khvatea/web_app_boxfuse:2.0.0'
                    }
                }
            }
        }
    }
}
